@import 'config'; 
@import 'menu';
/* 
  imports the mixins and variables from our partials _config.scss files
  all partial files start with an underscore (_)

  -our mobile partials that contain our media queries are at the bottom of the file. More info there.
*/

* {
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  color: set-text-color($primary-color);
  height: 100%;
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

//headings
h1, h2, h3 {
  margin: 0;
  font-weight: 400;

  &.lg-heading { //& targets the parent element with a class of lg-heading
    font-size: 6rem;
  }

  &.sm-heading { //& tagets the parent element with a class of sm-heading
    margin-bottom: 2rem;
    padding: 0.2rem 0.1rem;
    background: rbga(lighten($primary-color, 2), 0.5); //rgba gives the lighten a opacity of 50% so we can see through it 
  }
}

a {
  color: #fff;
  text-decoration: none;
}

header {
  position: fixed;
  z-index: 2;
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

main {
  padding: 4rem;
  //height: 100%;
  min-height: calc(100vh - 60px); // using calc instead of 100% due to the footer
  /*
    if no elements were between the heading and the footer then the footer would move up in place since 100% of the main
    element would be nothing. using calc(100vh) we can get the difference of the footer and style the footer to always be at the bottom
  */

  &#home { //targets the any element with an id of home inside the main element (including the main element itself)
    overflow: hidden; //removes the scrollbar if the contents of the main element overflows its alloted space
    
    h1 { //targets h1 inside the element with id of home 
      margin-top: 20vh; 
      /* 
        vh is a unit that stands for viewport height. Think of the height as 100 slices across, 
        so if you say 20vh, it will take 20 of those slices. If you said 100vh it will take up all of the slices.
        50vh will take up half the 100 slices.
      */
    }
  }

  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;
      &:hover { //targets the parent element (the a element in this case) and will apply this stylesheet for the :hover pseudo element
        color: $secondary-color;
        @include eastOut;
      }
    }
  }
}

.about-info {
  display: grid;
  grid-gap: 30px;
  grid-template-areas: 
  'bioimage bio bio'
  'job1 job2 job3';
  grid-template-columns: repeat(3, 1fr);

  .bio-image {
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }
  
  .bio {
    grid-area: bio;
    font-size: 1.5rem;
  }
  
  .job-1 {
    grid-area: job1;
  }
  
  .job-2 {
    grid-area: job2;
  }
  
  .job-3 {
    grid-area: job3;
  } 
  
  .job {
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;
  }
}

// Work/Projects
.projects {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 0.7rem;

  img {
    width: 100%;
    border: 3px #fff solid;

    &:hover {
      opacity: 0.5;
      border-color: $secondary-color;
      @include eastOut;
    }
  }
}

//Button Styles
.btn {
  display: block;
  padding: 0.5rem 1rem;
  border: 0;
  margin-block: 0.3rem;
  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color);
  }
}

.btn-dark {
  @extend .btn;
  background: darken($primary-color, 50);
  color: #fff;
}

.btn-light {
  @extend .btn;
  background: lighten($primary-color, 50);
  color: #333;
}


#main-footer {
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color($primary-color);
  height: 60px;
}

@import 'mobile'; 
/* 
  we keep our media queries at the bottom because we want it to run after our main css has already been applied
  to our webpage
*/